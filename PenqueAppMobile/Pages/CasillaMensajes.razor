@page "/misMensajes"
@using PenqueAppMobile.Models
@using PenqueAppMobile.Services
@using Newtonsoft.Json
@inject NavigationManager NavManager;
@inject IAppService AppService

@{
    var id = Setting.UserBasicDetail.id;
    var mensajes = AsyncUtil.RunSync<List<Chat>>(() => getMensajes(id));

}

<section class="container ">
  <mat-card class="pencas-card">
    <mat-list>
      <h2 class="mat-h1 colorP">Casilla de Mensajes</h2>
        @{
          foreach (var m in mensajes){
                    <div class="row" @onclick="() => verCasillaIndividual(m.idempresa,m.empresa, m.id)">
                        <div class="col-3"></div>
                        <div class="text-left">
                            <img src="https://cdn-icons-png.flaticon.com/512/1946/1946429.png" class="icon-display" alt="">
                            <p class="">@m.empresa</p>
                        </div>
                    </div>
                }
        }
        
    </mat-list>
  </mat-card>
</section>

<button class="button-49" role="button" @onclick="() => atras()">Atrás</button>


@code{

    private async Task<List<Chat>> getMensajes(int id)
    {
        List<Chat> listaC = await Task.Run(() => AppService.miBuzonMensajes(id));

        return listaC;
    }

    private async void verCasillaIndividual(int idEmpresa, string nombreE, int idChat)
    {
        //var mensajes = await Task.Run(() => AppService.casillaIndividualMensajes(idChat));
        var mensajeria = new Mensaje
            {
                id = idChat,
                empresa = nombreE,
                idEmpresa = idEmpresa,
            };

        string infoCasilla = JsonConvert.SerializeObject(mensajeria);
        await SecureStorage.SetAsync(nameof(Setting.casillaIndividual), infoCasilla);
        Setting.casillaIndividual = mensajeria;
        NavManager.NavigateTo("/casillaPersonal");
    }

    private void atras()
    {

        NavManager.NavigateTo("/dashboard");
    }
}
