@page "/verCompetencia"
@using PenqueAppMobile.Models
@using PenqueAppMobile.Services
@using Newtonsoft.Json
@inject NavigationManager NavManager;
@inject IAppService AppService

@{
    var id = Setting.competencia.id;
    var participantes = AsyncUtil.RunSync<List<Participante>>(() => getParticipantes(id));
    var competencia = Setting.competencia;
    var resultado = AsyncUtil.RunSync<List<DtResultadoC>>(() => getResultado(id));

    var miApuesta = "";
    if (Setting.UserBasicDetail != null)
    {
        var idUser = Setting.UserBasicDetail.id;
        var idPenca = Setting.PencaDetail.id;
        miApuesta = AsyncUtil.RunSync<string>(() => getMiApuesta(idUser, id, idPenca));
    }


}
<section class="container center-vh">
    <h2 class="mat-h1 colorP">Competencia: @competencia.nombre</h2>
    <h4 class="colorE">Fecha: @competencia.fecha_competencia</h4>
    <table>
        <thead>
            <tr>
                <th scope="col">Nombre</th>
                <th scope="col">Disciplina</th>
                @if (Setting.UserBasicDetail != null)
                {
                    <th scope="col">Apostar</th>
                }
            </tr>
        </thead>
        <tbody>
            @{
                foreach (var p in participantes)
                {
                    <tr>
                        <td data-label="Nombre">@p.nombre</td>
                        <td data-label="Disciplina">@p.Area</td>
                        @if (Setting.UserBasicDetail != null)
                        {
                            if (miApuesta == "")
                            {
                                <td data-label="Apostar"> <button mat-stroked-button class="enabled" style="margin-left:5px" @onclick="() => Apostar(p.id)"><span class="@_spinnerClass" role="status" aria-hidden="true"></span>Apostar</button></td>

                            }
                            else
                            {
                                if (miApuesta == p.nombre)
                                {
                                    <td data-label="Apuesta"><span class="apuesta">Tu Apuesta</span></td>
                                }
                                else
                                {
                                    <td data-label=""></td>
                                }
                            }

                        }


                    </tr>
                }
            }

        </tbody>
    </table>
</section>


@if (resultado.Count() != 0)
{
    <section class="container center-vh">
        <h2 class="mat-h1 colorP">Resultados:</h2>
        <table>
            <thead>
                <tr>
                    <th scope="col">Posicion</th>
                    <th scope="col">Nombre</th>
                </tr>
            </thead>
            <tbody>

                @foreach (var r in resultado)
                {
                    <tr>
                        <td data-label="Posición">@r.id</td>
                        <td data-label="Nombre">@r.nombre</td>
                    </tr>
                }

            </tbody>
        </table>
    </section>
}

<br />
<button class="button-49" role="button" @onclick="() => atras()">Atrás</button>


@code {
    private async Task<List<Participante>> getParticipantes(int id)
    {
        List<Participante> listaP = await Task.Run(() => AppService.ListaParticipantes(id));

        return listaP;
    }

    private async Task<List<DtResultadoC>> getResultado(int id)
    {
        List<DtResultadoC> listaR = await Task.Run(() => AppService.resultadoCompetencia(id));

        return listaR;
    }

    private async Task<string> getMiApuesta(int idU, int idC, int idP)
    {
        string estado = await Task.Run(() => AppService.verMiApuesta(idC, idU, idP));

        return estado;
    }

    private string _spinnerClass = "";
    private async void Apostar(int idParticipante)
    {
        _spinnerClass = "spinner-border spinner-border-sm";

        var apuesta = new Apuesta
            {
                idCompetencia = Setting.competencia.id,
                idUsuario = Setting.UserBasicDetail.id,
                idPenca = Setting.PencaDetail.id,
                idParticipante = idParticipante,
            };

        var response = await AppService.ApostarCompetencia(apuesta);
        if (response.IsSuccess)
        {
            await App.Current.MainPage.DisplayAlert("Success", "Apuesta realizada con exito", "OK");
            NavManager.NavigateTo("/verCompetencia");
        }
        else
        {
            await App.Current.MainPage.DisplayAlert("Oops", response.ErrorMessage, "OK");
        }
        _spinnerClass = "";
        this.StateHasChanged();
    }

    private void atras()
    {
        NavManager.NavigateTo("/infoPenca");
    }
}

